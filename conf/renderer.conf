# Configuration for a Visage renderer.

# Set to true to enable pretty colors in the console.
ansi: true

rabbitmq {
	# The host to connect to for the RabbitMQ queue.
	host: 127.0.0.1
	# The port RabbitMQ is running on.
	port: 5672
	
	# The credentials to use to connect to RabbitMQ.
	# Uncomment these if you need them.
	#user: myuser
	#password: s0m3aw3s0m3p4ssw0rd!
	
	# The name of the queue to use for receiving work.
	# It will be automatically created on start if it does not exist.
	queue: "visage"
}



# The name of the renderer. This is only for reference. If blank or not present,
# Visage will fall back to "unnamed renderer". Prepending this value with a
# ~ (tilde) will make it run a command and use it's output as the renderer name.
name: ~hostname

# The weight of this renderer. The higher the value, the more likely it is this
# renderer will be picked.
weight: 0

# The amount of separate render threads to create. This is how many concurrent
# renders this renderer can handle.
renderers: 4

# The maximum amount of messages to queue up for this renderer. Set this to -1
# to have this renderer consume all jobs unless it is down.
qos: 4

# If true, the render window will be visible. This can be useful for debugging.
visible: true

# Setting this to true will make Visage render the same skin 60 times a second.
# Useful for debugging. Uses the test skin. Doesn't do anything you can see if
# visible is false.
continuous: false

# If true, pngquant will be run on images before sending them back to the
# distributor. Requires pngquant to be on the path.
pngquant: true
